apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}
  labels:
    app: {{ .Values.appName }}
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}
    spec:
      containers:
      - name: {{ .Values.appName }}
        image: {{ .Values.image }}
        imagePullPolicy: IfNotPresent
        ports:
        - name: rest
          containerPort: {{ .Values.headless.servicePortSchemaRegistry }}
        env:
        - name: SCHEMA_REGISTRY_HOST_NAME
          value: 'svc-{{- .Values.appName }}-headless'
        - name: SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS
          value: {{ .Values.kafkaBootstrapServers }}
        - name: SCHEMA_REGISTRY_LISTENERS
          value: 'http://0.0.0.0:{{- .Values.headless.servicePortSchemaRegistry }}'
        - name: SCHEMA_REGISTRY_KAFKASTORE_TOPIC
          value: '_schemas'
        - name: SCHEMA_REGISTRY_KAFKASTORE_TOPIC_REPLICATION_FACTOR
          value: '3'